{"version":3,"sources":["logo.svg","components/Rightsidenav.js","components/Headertabs.js","components/Main.js","components/menucomponents/Props.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Rightsidenav","className","border-style","border-color","border-width","as","Item","action","href","active","Onclick","Headertabs","size","variant","bsStyle","Class","ButtonGroup","title","id","eventKey","Main","Props_Funtion","App","src","logo","alt","target","rel","Props","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,kC,8TCkB5BC,MAff,WACE,OAAO,yBAAKC,UAAY,eAAgBC,eAAa,QAAQC,eAAa,QAAQC,eAAa,OAE/F,kBAAC,IAAD,CAAWC,GAAG,MACd,kBAAC,IAAUC,KAAX,CAAgBD,GAAG,KAAKE,QAAM,EAACC,KAAK,SAASC,QAAM,GAAnD,WACA,kBAAC,IAAUH,KAAX,CAAgBD,GAAG,KAAKE,QAAM,EAACC,KAAK,UAApC,yCACA,kBAAC,IAAUF,KAAX,CAAgBD,GAAG,KAAKE,QAAM,EAACG,QAAS,4BAAxC,wBACA,kBAAC,IAAUJ,KAAX,CAAgBD,GAAG,KAAKE,QAAM,EAACC,KAAK,SAApC,UACA,kBAAC,IAAUF,KAAX,CAAgBD,GAAG,KAAKE,QAAM,EAACC,KAAK,UAApC,SACA,kBAAC,IAAUF,KAAX,CAAgBD,GAAG,KAAKE,QAAM,EAACC,KAAK,UAApC,yB,oECkBeG,MApBjB,WACI,OAAO,yBAAKV,UAAY,iBAAiBC,eAAa,SAEtD,kBAAC,IAAD,CAAaU,KAAK,KAAKX,UAAU,QAC7B,kBAAC,IAAD,CAAQW,KAAK,MAAb,uBACA,kBAAC,IAAD,CAAQC,QAAQ,SAASD,KAAK,MAA9B,SACA,kBAAC,IAAD,CAAQE,QAAQ,QAAQC,MAAM,cAA9B,eACA,kBAAC,IAAD,CAAgBF,QAAQ,SAASR,GAAIW,IAAaC,MAAM,WAAWC,GAAG,sBACtE,kBAAC,IAASZ,KAAV,CAAea,SAAS,KAAxB,yBACA,kBAAC,IAASb,KAAV,CAAea,SAAS,KAAxB,kBAEA,kBAAC,IAAD,CAAQL,QAAQ,QAAQC,MAAM,cAA9B,eACA,kBAAC,IAAD,CAAQD,QAAQ,QAAQC,MAAM,cAA9B,iBCHSK,MAhBjB,WACI,OAAO,yBAAKnB,UAAY,WAAWC,eAAa,SAEhD,4BACA,4CACA,qCACA,6CACA,qDCOamB,EAPK,WAClB,OAAO,yBAAKpB,UAAY,iBAAiBC,eAAa,SACtD,yDC0CWoB,MAzCf,WACE,OACE,yBAAKrB,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKsB,IAAKC,IAAMvB,UAAU,WAAWwB,IAAI,SACzC,2EAGA,uBACExB,UAAU,WACVO,KAAK,sBACLkB,OAAO,SACPC,IAAI,uBAJN,gBASF,kBAAC,EAAD,MAAyB,kBAAC,EAAD,MACzB,kBAAC,EAAD,MAEA,kBAACC,EAAD,QCrBcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.eea2ea75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nfunction Rightsidenav() {\r\n  return <div className = \"rightsidenav\"  border-style=\"SOLID\" border-color=\"green\" border-width=\"5px\">\r\n  \r\n  <ListGroup as=\"ul\">\r\n  <ListGroup.Item as=\"li\" action href=\"App.js\" active> Home  </ListGroup.Item>\r\n  <ListGroup.Item as=\"li\" action href=\"App.js\">How React works-model view controller</ListGroup.Item>\r\n  <ListGroup.Item as=\"li\" action Onclick={\"https://www.youtube.com/\"}> Components in React</ListGroup.Item>\r\n  <ListGroup.Item as=\"li\" action href=\"./app\">States</ListGroup.Item>\r\n  <ListGroup.Item as=\"li\" action href=\"App.js\">Hooks</ListGroup.Item>\r\n  <ListGroup.Item as=\"li\" action href=\"App.js\">Props (Peoperties)</ListGroup.Item>\r\n</ListGroup>\r\n  \r\n  \r\n  </div>;\r\n}\r\nexport default Rightsidenav","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\n//import ReactBootstrap from 'react-bootstrap/ResponsiveEmbed';\r\n\r\n\r\n\r\nfunction Headertabs() {\r\n    return <div className = \"headertabs-div\" border-style=\"SOLID\">\r\n\r\n    <ButtonGroup size=\"sm\" className=\"mr-7\">\r\n        <Button size=\"lg\">  BootStrap-React  </Button>\r\n        <Button variant=\"danger\" size=\"sm\">Redux</Button>\r\n        <Button bsStyle=\"false\" Class=\"custom-btn\">Material UI</Button>\r\n        <DropdownButton variant=\"danger\" as={ButtonGroup} title=\"Advanced\" id=\"bg-nested-dropdown\">\r\n        <Dropdown.Item eventKey=\"1\">Custom ReactBootstrap</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">Dropdown link</Dropdown.Item>\r\n        </DropdownButton>\r\n        <Button bsStyle=\"false\" Class=\"custom-btn\">Just Posted</Button>\r\n        <Button bsStyle=\"false\" Class=\"custom-btn\">What's New</Button>\r\n    </ButtonGroup>\r\n    \r\n    \r\n    \r\n    </div>;\r\n  }\r\n\r\n  export default Headertabs","import React from 'react';\r\n\r\n\r\nfunction Main() {\r\n    return <div className = \"Main-div\" border-style=\"SOLID\">\r\n     \r\n    <ul>\r\n    <li> What is JSX</li>\r\n    <li>Hooks</li>\r\n    <li>Event Binding</li>\r\n    <li>Props (Properties)</li>\r\n    </ul>  \r\n   \r\n    \r\n    \r\n    \r\n    </div>;\r\n  }\r\n\r\n  export default Main","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\n//import ReactBootstrap from 'react-bootstrap/ResponsiveEmbed';\r\n\r\n\r\n\r\nconst Props_Funtion = ()  => {\r\n    return <div className = \"headertabs-div\" border-style=\"SOLID\">\r\n    <h1> props means parameters</h1>\r\n    \r\n    </div>;\r\n  }\r\n\r\n  export default Props_Funtion","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './components/Headertabs.css';\nimport './css/Rightsidenav.css';\nimport './css/Headertabs.css';\nimport './css/Main.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Rightsidenav from './components/Rightsidenav'\nimport Headertabs from './components/Headertabs'\nimport Main from './components/Main';\nimport Props_Funtion from './components/menucomponents/Props';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          And Stay Stuted to kapil's reactjs tutorials\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      <Headertabs></Headertabs><Rightsidenav></Rightsidenav>  \n      <Main></Main>\n\n      <Props_Funtion></Props_Funtion>\n\n\n      {/* <div>\n        <h6>reactjs is not a javascript framework its a function library of javascript</h6>\n      <p></p>\n      </div> */}\n\n\n\n\n      {/* <div className = \"componentdiv\" align=\"left\" border-style=\"SOLID\" border-color=\"green\" border-width=\"5px\">\n          <p> <span><h3>Components</h3>30.08.2019</span></p>\n          <p>1. FUntional Components </p> <br/>\n          <p>2. Class Components</p>\n      </div> */}\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}